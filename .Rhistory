this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
max_pred <- NA*ili_total
time_pred <- NA*ili_total
true_max <- NA*ili_total
true_time <- NA*ili_total
q <- 'go'
for(i in 365:length(SEASON)){#(sum(SEASON==1)+1)
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
max_pred <- NA*ili_total
time_pred <- NA*ili_total
true_max <- NA*ili_total
true_time <- NA*ili_total
q <- 'go'
for(i in 365:length(SEASON)){#(sum(SEASON==1)+1)
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
post_density <- function(tau,beta,psi){
tau <- tau[-1]
beta <- beta[-1]
psi <- psi[2:3,2:3]
temp <- -1/2*log(det(psi))-1/2*t(beta-tau)%*%solve(psi)%*%(beta-tau)
return(temp)
}
prediction <- function(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.1){
# history is a 3-column matrix, first column is ILITOTAL,
#	second is EPIWEEK, third is SEASON
# this_season is a 2-column matrix, first column is ILITOTAL,
#	second is EPIWEEK
X <- cbind(rep(1,nrow(history)),history[,2],history[,2]^2,history[,3])
Y <- log(history[,1]+1)
temp <- mu_MAP(X,Y)
prior_mean <- temp[[1]]
prior_covar <- temp[[2]]+diag(prior_var,3)
y <- log(this_season[,1]+1)
x <- this_season[,2]
x <- x[complete.cases(y)]
y <- y[complete.cases(y)]
season_lengths <- c(0,as.vector(table(X[,4])))
sigma <- sqrt(mean(sapply(unique(X[,4]),FUN=function(i) var(lm(Y[(sum(season_lengths[1:i])+1):sum(season_lengths[1:(i+1)])]~X[(sum(season_lengths[1:i])+1):sum(season_lengths[1:(i+1)]),2]+X[(sum(season_lengths[1:i])+1):sum(season_lengths[1:(i+1)]),3])$residuals))))
x_sq <- x^2
n <- length(y)
x_mat <- cbind(rep(1,n),x,x_sq)
V <- solve(solve(prior_covar)+t(x_mat)%*%diag(1/sigma^2,n)%*%(x_mat))
E <- V%*%(solve(prior_covar)%*%prior_mean+t(x_mat)%*%diag(1/sigma^2,n)%*%y)
curve_weights <- matching(E,mu_ests,V)
if(sum(curve_weights==0,na.rm=TRUE)==sum(!is.na(curve_weights))) curve_weights[!is.na(curve_weights)] <- 1/sum(!is.na(curve_weights))
week_probs <- aggregate(c(curve_weights, rep(0,52)),by=list(c(max_weeks,1:52)),FUN=sum,na.rm=TRUE)[,2]
curve_ind <- which.max(curve_weights)
hpd_region <- pred_hpd(week_probs,0.95)[[1]]
peak_intensity <- sum(maxes*curve_weights,na.rm=TRUE)
peak_occurrence <- sum(max_weeks*curve_weights,na.rm=TRUE)
if(length(x)==0) return(list(curve_ind,peak_intensity,peak_occurrence))
#if(peak_occurrence<=tail(x,1)&length(y)>0) if(sum(!is.na(y)>0)) peak_occurrence <- x[which.max(y)]
#if(peak_occurrence<=tail(x,1)&length(y)>0) if(sum(!is.na(y)>0)) peak_intensity <- exp(max(y))-1
return(list(curve_ind,peak_intensity,peak_occurrence,hpd_region,E,curve_weights,V,week_probs,sigma,prior_mean,prior_covar))
}
max_pred <- NA*ili_total
time_pred <- NA*ili_total
true_max <- NA*ili_total
true_time <- NA*ili_total
q <- 'go'
for(i in 365:length(SEASON)){#(sum(SEASON==1)+1)
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
i <- 388
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
x_sq <- this_x^2
lin <- lm(log(this_y+1)~this_x+x_sq)
plot(log(this_y+1)~this_x)
lines(predict(lin))
coef(predict(lin))
coef(lin)
i
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
lines(exp(pred(lin)),col='blue')
lines(exp(predict(lin)),col='blue')
lines(exp(coef(lin)[1]+(1:52)*coef(lin)[2]+(1:52)^2*coef(lin)[3]))
lines(exp(coef(lin)[1]+(1:52)*coef(lin)[2]+(1:52)^2*coef(lin)[3]),col='blue')
this_y <- this_y[-1]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
length(hist_y)
dim(hist_x)
length(hist_x)
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
length(hist_x)
i
season_start_ind
SEASON[366] <- SEASON[366]-1
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
rand <- rep(1201,10)#sample(which(colSums(!is.na(mu_ests))==3),10)
ili_total <- c(sapply(rand,FUN=function(x) matrix(weekly_totals[(1:(52*20))+(x-1)*(52*20),2],ncol=20)[,sample(1:20,1)]))#flu_data$ILITOTAL#
SEASON <- rep(1:10,each=52)#seasons
max_pred <- NA*ili_total
time_pred <- NA*ili_total
true_max <- NA*ili_total
true_time <- NA*ili_total
q <- 'go'
for(i in 365:length(SEASON)){#(sum(SEASON==1)+1)
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
which(max_weeks==28)
rand <- rep(936,10)#sample(which(colSums(!is.na(mu_ests))==3),10)
ili_total <- c(sapply(rand,FUN=function(x) matrix(weekly_totals[(1:(52*20))+(x-1)*(52*20),2],ncol=20)[,sample(1:20,1)]))#flu_data$ILITOTAL#
SEASON <- rep(1:10,each=52)#seasons
max_pred <- NA*ili_total
time_pred <- NA*ili_total
true_max <- NA*ili_total
true_time <- NA*ili_total
q <- 'go'
for(i in 365:length(SEASON)){#(sum(SEASON==1)+1)
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.01)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
max_pred <- NA*ili_total
time_pred <- NA*ili_total
true_max <- NA*ili_total
true_time <- NA*ili_total
q <- 'go'
for(i in 365:length(SEASON)){#(sum(SEASON==1)+1)
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.0001)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
post_density <- function(tau,beta,psi){
#tau <- tau[-1]
#beta <- beta[-1]
#psi <- psi[2:3,2:3]
temp <- -1/2*log(det(psi))-1/2*t(beta-tau)%*%solve(psi)%*%(beta-tau)
return(temp)
}
max_pred <- NA*ili_total
time_pred <- NA*ili_total
true_max <- NA*ili_total
true_time <- NA*ili_total
q <- 'go'
for(i in 365:length(SEASON)){#(sum(SEASON==1)+1)
season_start_ind <- min(which(SEASON[1:i]==max(SEASON[1:i])))
this_y <- ili_total[season_start_ind:i]
this_x <- 1:length(this_y)
t <- this_x
hist_y <- ili_total[1:(season_start_ind-1)]
hist_x <- c(unlist(sapply(1:(SEASON[season_start_ind]-1),FUN=function(x) cumsum(SEASON==x)[SEASON==x])))
history <- cbind(hist_y,hist_x,SEASON[1:(season_start_ind-1)])
this_season <- cbind(this_y,this_x)
pred <- prediction(this_season,history,mu_ests,weekly_totals,max_weeks,maxes,prior_var=0.0001)
if(!is.na(pred[[1]])) time_pred[i] <- pred[[3]] else time_pred[i] <- NA
if(!is.na(pred[[1]])) max_pred[i] <- pred[[2]] else max_pred[i] <- NA
if(sum(!is.na(this_y)>0)&q!='q'){
plot(t,this_y,main=i,xlim=c(0,55),ylim=range(ili_total,na.rm=TRUE))
points(rep(1:52,20),weekly_totals[(1:(52*20))+(pred[[1]]-1)*(52*20),2],col='red')
lines(exp(pred[[5]][1]+pred[[5]][2]*(1:52)+pred[[5]][3]*(1:52)^2)-1)
abline(v=pred[[4]],col='red')
#abline(h=max_pred[i])
#abline(v=time_pred[i])
q <- readline()
}
if(!is.na(SEASON[i+1])) if(SEASON[i+1]>SEASON[i]){
true_max[season_start_ind:i] <- max(this_y,na.rm=TRUE)
true_time[season_start_ind:i] <- which.max(this_y)
}
}
25784/4
act_life_table <- read.csv('C:/Users/mcarzolio/Desktop/Population Aging/Birth and Death Papers and Data/SSA Actuarial Life Table 02_04_2014.csv')
act_life_table
plot(c(4207528,3829153,3467390))
plot(c(4207528,3829153,3467390),type='l')
getwd()
setwd("C:/Users/mcarzolio/Documents/GitHub/R_Scripts")
list.files()
source('./random_walk_metropolis_hastings.R')
if(!'parallel'%in%installed.packages()[,1]) install.packages('parallel')
particle_weights <- function(log_target,particles,nu){
log_evals <- (1-nu)*unlist(lapply(particles,log_target))
max_log_evals <- max(log_evals)
adjusted_log_evals <- log_evals-max_log_evals
weights <- exp(adjusted_log_evals)/sum(exp(adjusted_log_evals))
return(weights)
}
wpt <- function(N,log_target,x_0,p,nu,prop_sd,burnin=0,parallel=TRUE,cl=NULL,keep.open=FALSE){
d <- length(x_0)
if(parallel){
require(parallel)
if(is.null(cl)){
cl <- makeCluster(p)
varlist <- c('N','log_target','x_0','prop_sd','rwmh','nu','burnin','d')
clusterExport(cl,varlist,envir=environment())
}
particles <- clusterCall(cl,function() matrix(rwmh(N+burnin,log_target = function(x) nu*log_target(x),x_0,prop_sd)[,sample(1:(N+burnin))],ncol=N+burnin,nrow=d))
if(!keep.open) {
stopCluster(cl)
rm(cl)
}
} else {
particles <- list()
for(j in 1:p){
particles <- c(particles,list(matrix(rwmh(N+burnin,log_target = function(x) nu*log_target(x),x_0,prop_sd)[,sample(1:(N+burnin))],ncol=N+burnin,nrow=d)))
}
}
samples <- matrix(ncol=N,nrow=d)
weights <- sapply(1:(N+burnin),FUN=function(i) particle_weights(log_target,lapply(particles,FUN=function(x) x[,i]),nu))
sample_ind <- sample(1:p,1,prob=weights[,1])
current_sample <- particles[[sample_ind]][,1]
for(i in 1:(N-1+burnin)){
if(i>burnin){
samples[,i-burnin] <- current_sample
}
sample_ind <- sample(1:p,1,prob=weights[,i])
prop_sample <- particles[[sample_ind]][,i]
#pseudo_samples <- lapply(particles,FUN=function(x) x[,sample(1:i,1)])[-sample(1:p,1)]
#pseudo_weights <- particle_weights(log_target,c(list(current_sample),pseudo_samples),nu)
pseudo_samples <- lapply(particles,FUN=function(x) x[,i])[-sample_ind]
pseudo_weights <- particle_weights(log_target,c(list(current_sample),pseudo_samples),nu)
log_mh_ratio <- log_target(prop_sample)-log_target(current_sample)+log(pseudo_weights[1])-log(weights[sample_ind,i])+sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
if(log(runif(1))<log_mh_ratio) current_sample <- prop_sample
}
samples[,N] <- current_sample
return(samples)
}
log_target <- function(x){
mus <- matrix(c(c(-5,-8),c(5,5),c(10,12),c(-15,5),c(5,-15)),nrow=2)
sds <- 1
wts <- c(1/2,1/6,1/12,1/6,1/12)
log_terms <- colSums(-1/2*(log(2*pi)+2*log(sds)+(x-mus)^2/sds^2))
return(log(wts%*%exp(log_terms)))
}
N <- 1000
p <- 5
nu <- 0.05
x_0 <- runif(2,-20,20)
temp_ladder <- exp(seq(0,log(nu),length=p+1))
prop_sd_ladder <- 1/temp_ladder
burnin <- 2000
wpt_samps <- wpt(N=N,log_target=log_target,x_0=x_0,p=p,nu=nu,prop_sd=prop_sd_ladder[p+1],burnin=burnin)
dim(wpt_samps)
plot(t(wpt_samps))
particles <- list()
for(j in 1:p){
particles <- c(particles,list(matrix(rwmh(N+burnin,log_target = function(x) nu*log_target(x),x_0,prop_sd)[,sample(1:(N+burnin))],ncol=N+burnin,nrow=d)))
}
prop_sd <- 2
particles <- list()
for(j in 1:p){
particles <- c(particles,list(matrix(rwmh(N+burnin,log_target = function(x) nu*log_target(x),x_0,prop_sd)[,sample(1:(N+burnin))],ncol=N+burnin,nrow=d)))
}
d <- length(x_0)
particles <- list()
for(j in 1:p){
particles <- c(particles,list(matrix(rwmh(N+burnin,log_target = function(x) nu*log_target(x),x_0,prop_sd)[,sample(1:(N+burnin))],ncol=N+burnin,nrow=d)))
}
samples <- matrix(ncol=N,nrow=d)
weights <- sapply(1:(N+burnin),FUN=function(i) particle_weights(log_target,lapply(particles,FUN=function(x) x[,i]),nu))
sample_ind <- sample(1:p,1,prob=weights[,1])
current_sample <- particles[[sample_ind]][,1]
for(i in 1:(N-1+burnin)){
if(i>burnin){
samples[,i-burnin] <- current_sample
}
sample_ind <- sample(1:p,1,prob=weights[,i])
prop_sample <- particles[[sample_ind]][,i]
#pseudo_samples <- lapply(particles,FUN=function(x) x[,sample(1:i,1)])[-sample(1:p,1)]
#pseudo_weights <- particle_weights(log_target,c(list(current_sample),pseudo_samples),nu)
pseudo_samples <- lapply(particles,FUN=function(x) x[,i])[-sample_ind]
pseudo_weights <- particle_weights(log_target,c(list(current_sample),pseudo_samples),nu)
log_mh_ratio <- log_target(prop_sample)-log_target(current_sample)+log(pseudo_weights[1])-log(weights[sample_ind,i])+sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
if(log(runif(1))<log_mh_ratio) current_sample <- prop_sample
}
samples[,N] <- current_sample
i <- 10
log_target(prop_sample)-log_target(current_sample)+log(pseudo_weights[1])-log(weights[sample_ind,i])+sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
log(sum(weights[,i]))
log(sum(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i]))))
sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i]))
log(sum(exp(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i])))))
log(sum(exp(sapply(particles,FUN=function(x) if(i==sample_ind) (1-nu)*log_target(current_sample) else (1-nu)*log_target(x[,i])))))
sample_ind <- sample(1:p,1,prob=weights[,i])
prop_sample <- particles[[sample_ind]][,i]
log_target(prop_sample)-log_target(current_sample)+log(pseudo_weights[1])-log(weights[sample_ind,i])+sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
log(sum(exp(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i])))))
log(sum(exp(sapply(particles,FUN=function(x) if(i==sample_ind) (1-nu)*log_target(current_sample) else (1-nu)*log_target(x[,i])))))
log(sum(exp(sapply(pseudo_samples,FUN=function(x) (1-nu)*log_target(x[,i])))))
pseudo_samples
log(sum(exp(sapply(pseudo_samples,FUN=function(x) (1-nu)*log_target(x)))))
log(sum(exp(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i])))))
log_target(prop_sample)-log_target(current_sample)+log(pseudo_weights[1])-log(weights[sample_ind,i])+sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
-11.5682--6.605575
sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x))
sapply(particles,FUN=function(x) nu*log_target(x[,i]))
c(list(current_sample),pseudo_samples)
sapply(particles,FUN=function(x) x[,i])
i
sample_ind <- sample(1:p,1,prob=weights[,i])
prop_sample <- particles[[sample_ind]][,i]
pseudo_samples <- lapply(particles,FUN=function(x) x[,i])[-sample_ind]
pseudo_weights <- particle_weights(log_target,c(list(current_sample),pseudo_samples),nu)
pseudo_samples
sapply(particles,FUN=function(x) x[,i])
log(sum(exp(sapply(pseudo_samples,FUN=function(x) (1-nu)*log_target(x)))))
log(sum(exp(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i])))))
log(sum(exp(sapply(pseudo_samples,FUN=function(x) (1-nu)*log_target(x)))))-log(sum(exp(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i])))))
log_target(prop_sample)-log_target(current_sample)+log(pseudo_weights[1])-log(weights[sample_ind,i])+sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
nu*log_target(current_sample)
nu*(log_target(current_sample)-log_target(pseudo_samples[1]))
nu*(log_target(current_sample)-log_target(pseudo_samples[[1]]))
pseudo_samples[[1]]
current_sample
c(list(current_sample),pseudo_samples)
sapply(particles,FUN=function(x) x[,i])
nu*(log_target(current_sample)-log_target(pseudo_samples[[sample_ind]]))
sample_ind
nu*(log_target(current_sample)-log_target(particles[[sample_ind]]))
nu*(log_target(current_sample)-log_target(particles[[sample_ind]][,i]))
sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])
sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i]))
sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
pseudo_samples
sapply(particles,FUN=function(x) x[,o])
sapply(particles,FUN=function(x) x[,i])
sum(exp(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) (1-nu)*log_target(x))))
sum(exp(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i]))))
log(sum(exp(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) (1-nu)*log_target(x)))))-log(sum(exp(sapply(particles,FUN=function(x) (1-nu)*log_target(x[,i])))))
log_target(prop_sample)-log_target(current_sample)+log(pseudo_weights[1])-log(weights[sample_ind,i])+sum(sapply(c(list(current_sample),pseudo_samples),FUN=function(x) nu*log_target(x)))-sum(sapply(particles,FUN=function(x) nu*log_target(x[,i])))
